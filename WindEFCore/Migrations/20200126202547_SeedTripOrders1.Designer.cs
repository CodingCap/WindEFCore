// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WindEFCore;

namespace WindEFCore.Migrations
{
    [DbContext(typeof(WindDbContext))]
    [Migration("20200126202547_SeedTripOrders1")]
    partial class SeedTripOrders1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WindEFCore.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = -1,
                            Street = "Theodor Pallady",
                            StreetNumber = "47"
                        });
                });

            modelBuilder.Entity("WindEFCore.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = -1,
                            CompanyName = "WindSoft"
                        });
                });

            modelBuilder.Entity("WindEFCore.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<byte>("Currency")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = -1,
                            ClientId = -1,
                            Currency = (byte)2,
                            Price = 20m,
                            ReferenceNumber = "test11"
                        });
                });

            modelBuilder.Entity("WindEFCore.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<byte>("Currency")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TripReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripId");

                    b.HasIndex("CarrierId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = -1,
                            CarrierId = -1,
                            Currency = (byte)1,
                            Price = 20m,
                            TripReference = "tesdt"
                        });
                });

            modelBuilder.Entity("WindEFCore.Models.TripOrders", b =>
                {
                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("TripId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("TripOrders");

                    b.HasData(
                        new
                        {
                            TripId = -1,
                            OrderId = -1
                        });
                });

            modelBuilder.Entity("WindEFCore.Models.Address", b =>
                {
                    b.HasOne("WindEFCore.Models.Company", "Company")
                        .WithOne("Address")
                        .HasForeignKey("WindEFCore.Models.Address", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WindEFCore.Models.Order", b =>
                {
                    b.HasOne("WindEFCore.Models.Company", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("WindEFCore.Models.Trip", b =>
                {
                    b.HasOne("WindEFCore.Models.Company", "Carrier")
                        .WithMany("Trips")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("WindEFCore.Models.TripOrders", b =>
                {
                    b.HasOne("WindEFCore.Models.Order", "Order")
                        .WithMany("TripOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WindEFCore.Models.Trip", "Trip")
                        .WithMany("TripOrders")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
